@model MainApp.Models.Application

@{
    ViewData["Title"] = "Create";
}

@*This won't work (yet) - we need JobOffer id and Candidate id,
    they should be supplied in the Application controller.
    They won't change in this view, but will influence the view:
    JobOffer will be passed as hidden argument in form, and
    Candidate will supply default values for the form fields
    and will be passed as hidden argument in form*@
<div class="row page-box">
    <div class="col-sm-12">
        <h2>New application</h2>
        @using (Html.BeginForm("Create", "Application", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.LabelFor(m => m.FirstName)
                @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.LastName)
                @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PhoneNumber)
                @Html.EditorFor(m => m.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.EmailAddress)
                @Html.EditorFor(m => m.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.EmailAddress, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextBoxFor(m => m.File, new { type = "file" })
                @Html.ValidationMessageFor(m => m.File)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ContactAgreement)
                @Html.EditorFor(m => m.ContactAgreement, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.ContactAgreement, "", new { @class = "text-danger" })
            </div>
            <a asp-area="" asp-controller="JobOffer" asp-action="Index">
                <button type="button" class="btn btn-rounded btn-secondary mr-2">
                    <i class="fa fa-chevron-left pr-2"></i>
                    Cancel
                </button>
            </a>
            <button type="submit" class="btn btn-rounded btn-primary">
                <i class="fa fa-check pr-2"></i>
                Save
            </button>
        }
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
